@page
@model MiniLMS.Pages.StudentDetailsModel

@{
    ViewData["Title"] = "StudentDetails";
}

<h1>StudentDetails</h1>

<div>
    <h4>Student</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.CurrentMajor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.CurrentMajor)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.CurrentMinor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.CurrentMinor)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.GraduationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.GraduationDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student.Status)
        </dd>
    </dl>

  <h2>Enrollments</h2>
  <ul id="enrollmentList">
    @foreach(var enr in Model.Student.Enrollments)
    {
      var cname = enr.Section.Course.Prefix + " " + enr.Section.Course.Number + " -- " + enr.Section.Course.Name;
      var name = cname + enr.Section.Semester + " " + enr.Section.SectionLetter;

      <li>@name</li>
    }
  </ul>

  <select id="sectionList"></select>
  <button id="enrollButton">ENROLL</button>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Student.StudentId">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>


@section Scripts {
  <script>
  //let opt = document.createElement('option');
  //opt.value = "12";
  //opt.text = "COURSE 12";
  //sectionList.add(opt);

  //fetch().then().then().catch()

  async function loadList() {
    let url = '@Url.Content("~/api/sections")';
    //alert(url)
    let response = await fetch(url);
    //let text = await response.text();
    //alert(text);
    let data = await response.json();

    for (let x = 0; x < data.length; x++) {
      let section = data[x];
      name = section.course.number + ' ' + section.course.prefix + ' -- ' + section.course.name +
        ' (' + section.semester + ' ' + section.sectionLetter + ')';
      let opt = document.createElement('option');
      opt.value = section.sectionId;
      opt.text = name;
      sectionList.add(opt);
    }

  }
  loadList();

  enrollButton.onclick = async function () {
    //alert(sectionList[sectionList.selectedIndex].value);
      let secId = sectionList[sectionList.selectedIndex].value;
      let stuId = '@Model.Student.StudentId';

      let data = {
        sectionId: secId,
        studentId: stuId
      };

      var url = '@Url.Content("~/api/enrollments")';
      let response = await fetch(url, {
        method: 'POST',
        mode: 'cors', // no-cors, *cors, same-origin
        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        credentials: 'same-origin', // include, *same-origin, omit
        headers: {
          'Content-Type': 'application/json'
          // 'Content-Type': 'application/x-www-form-urlencoded',
        },
        redirect: 'follow', // manual, *follow, error
        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
        body: JSON.stringify(data)
      });
      alert(await response.text())
  }
  </script>
}
