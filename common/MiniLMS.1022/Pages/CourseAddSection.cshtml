@page
@model MiniLMS.Pages.CourseAddSectionModel

@{
    ViewData["Title"] = "Add a Course Section";
}

<h1>Add a Course Section</h1>

<!-- Here I'm able to add the course details because I loaded them in the Model class OnGet -->
<h2>Course: @Model.Course.Prefix @Model.Course.Number &mdash; @Model.Course.Name</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Section.Semester" class="control-label"></label>
                <input asp-for="Section.Semester" class="form-control" />
                <span asp-validation-for="Section.Semester" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Section.SectionLetter" class="control-label"></label>
                <input asp-for="Section.SectionLetter" class="form-control" />
                <span asp-validation-for="Section.SectionLetter" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Section.MaxStudents" class="control-label"></label>
                <input asp-for="Section.MaxStudents" class="form-control" />
                <span asp-validation-for="Section.MaxStudents" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Section.IsActive" /> @Html.DisplayNameFor(model => model.Section.IsActive)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Section.StartDate" class="control-label"></label>
                <input asp-for="Section.StartDate" class="form-control" />
                <span asp-validation-for="Section.StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Section.InstructorId" class="control-label"></label>
                <select asp-for="Section.InstructorId" class ="form-control" asp-items="ViewBag.InstructorId"></select>
            </div>
            
            <!-- Here I changed from using the ViewBag to pass in a value...instead I'm using the Course Model object -->
            <input type="hidden" asp-for="Section.CourseId" value="@Model.Course.CourseId" />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
